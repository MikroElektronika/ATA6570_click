{*
Example for ATA6570 Click

    Date          : Dec 2017.
    Author        : MikroE Team

Test configuration STM32 :
    
    MCU              : STM32F107VCT6
    Dev. Board       : EasyMx PRO v7 for STM32
    ARM Compiler ver : v6.0.0.0

---

Description :

The application is composed of three sections :

- System Initialization - Initializes SPI bus used for the configuration of the ATA6570 module, 
  UART bus used for communcation and another UART bus used for data logging
- Application Initialization - Initializes SPI and UART driver, both necessary. In addition to this
  module is palced inside normal working mode cappable of tranmission and reception of data.
- Application Task - (code snippet) - Tranismiter/Receiver task depend on uncommented code
  Receiver logging each received byte to the UART for data logging, while transmiter send message each
  2 seconds.

*}
program Click_ATA6570_STM;

uses Click_ATA6570_types, Click_ATA6570_config;

const
    MESSAGE_DATA : array[9] of uint8_t = ('M', 'i', 'k', 'r', 'o', 'E', 13, 10, 0); 
    
procedure systemInit(); 
begin

    GPIO_Digital_Output(@GPIOB_BASE, _GPIO_PINMASK_ALL); 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT); 
    mikrobus_spiInit(_MIKROBUS1, @_ATA6570_SPI_CFG[0]); 
    mikrobus_uartInit(_MIKROBUS1, @_ATA6570_UART_CFG[0]); 
    mikrobus_logInit(_MIKROBUS2, 9600); 
    Delay_ms(100); 

end;

procedure applicationInit(); 
begin

    ata6570_spiDriverInit(T_ATA6570_P(@_MIKROBUS1_GPIO), T_ATA6570_P(@_MIKROBUS1_SPI)); 
    ata6570_uartDriverInit(T_ATA6570_P(@_MIKROBUS1_GPIO), T_ATA6570_P(@_MIKROBUS1_UART)); 
    mikrobus_logWrite('Initialized', _LOG_LINE); 
    Delay_ms(100); 
    ata6570_writeReg(_ATA6570_DMCR, _ATA6570_OPMODE_NORMAL); 
    mikrobus_logWrite('ATA6570 Normal mode', _LOG_LINE); 
    GPIOB_ODR := 0xFF; 
    Delay_ms(1000); 

end;

procedure applicationTask(); 
var
    tmp : uint8_t;
    rdyFlag : uint8_t;
begin

    rdyFlag := ata6570_byteReady(); 
    if ((1 = rdyFlag)) then 
    begin
        tmp := ata6570_readByte(); 
        GPIOB_ODR := tmp; 
        Delay_ms(1000); 
        GPIOB_ODR := not tmp; 
        Delay_ms(1000); 
    end; 

end;

begin

    systemInit(); 
    applicationInit(); 
    while (1) do 
    begin 
        applicationTask(); 
    end;

end.